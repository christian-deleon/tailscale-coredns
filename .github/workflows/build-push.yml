name: Build and Push Multi-Architecture Image to GHCR

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
    paths:
      - '*.go'
      - 'go.*'
      - 'docker/Dockerfile'
      - 'docker/entrypoint.sh'

env:
  PLATFORMS: linux/amd64,linux/arm64
  GHCR_IMAGE_URL: ghcr.io/${{ github.actor }}/tailscale-coredns

jobs:
  build:
    runs-on: ${{ matrix.runs_on }}
    timeout-minutes: 10
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runs_on: ubuntu-latest
            arch: amd64
          - platform: linux/arm64
            runs_on: ubuntu-22.04-arm
            arch: arm64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tags
        id: tags
        run: |
          SHA="${{ github.sha }}"
          TAGS="${{ env.GHCR_IMAGE_URL }}:$SHA-${{ matrix.arch }}"
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: false
          load: true
          platforms: ${{ matrix.platform }}
          tags: local-image:build

      - name: Push single manifest
        run: |
          SHA="${{ github.sha }}"
          docker tag local-image:build ${{ env.GHCR_IMAGE_URL }}:$SHA-${{ matrix.arch }}
          docker push ${{ env.GHCR_IMAGE_URL }}:$SHA-${{ matrix.arch }}

  manifest:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          TAGS="latest"
          if [ "${{ github.ref_type }}" = "tag" ]; then
            TAGS="$TAGS ${{ github.ref_name }}"
          fi
          SHA="${{ github.sha }}"
          for TAG in $TAGS; do
            docker manifest create ${{ env.GHCR_IMAGE_URL }}:$TAG \
              ${{ env.GHCR_IMAGE_URL }}:$SHA-amd64 \
              ${{ env.GHCR_IMAGE_URL }}:$SHA-arm64
            docker manifest push ${{ env.GHCR_IMAGE_URL }}:$TAG
          done
